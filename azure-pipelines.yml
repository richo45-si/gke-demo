# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Terraform

jobs:
- job: Terraform
  displayName: 'Terraform Apply'
  steps:
  - task: DownloadSecureFile@1
    name: downloadCreds
    displayName: 'Download GCP Credentials'
    inputs:
      secureFile: $(terraform.secureFilePath)
      retryCount: 3

  - script: |
      #echo '$(terraform)' > $(System.DefaultWorkingDirectory)/gcp_creds.json
      echo '$(terraform)' > gke/org.json
    displayName: 'Save GCP Credentials to File'

  - task: UseDotNet@2
    displayName: 'Use Terraform'
    inputs:
      packageType: 'dotNetCore'
      version: '2.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - script: |
      cd $(System.DefaultWorkingDirectory)/path/to/terraform/code
      terraform init
      terraform apply -auto-approve
    displayName: 'Terraform Apply'



# trigger:
# - main

# pool:
#   #name: Default
#   vmImage: ubuntu-latest

# steps:

# - script: |
#     touch org.json
#     - bash: |
#     echo "##vso[task.setvariable variable=terraform;issecret=true]secretvalue"
#     - bash: |
#     echo $(terraform) > org.json
#     mv org.json gke
#     cd gke
#     terraform init
#     terraform plan
#   displayName: 'Terraform Script'
